install.packages("tidyverse")
install.packages("lattice")
install.packages(c("scikit_learn", "png", "jpeg", "pdf", "swirl"))
library(tidyverse)
library(highcharter)
library(lubridate)
df <- read_csv("http://bl.ocks.org/bricedev/raw/458a01917183d98dff3c/sf.csv")
glimpse(df)
df <- df %>%
rename_all(str_to_lower) %>%
rename_all(str_replace, "\\s+", "_") %>%
mutate(
id = seq(nrow(df)),
date2 = as.Date(ymd(date)),
tmstmp = datetime_to_timestamp(date2),
month = month(ymd(date))
)
dsmax <- df %>%
select(tmstmp, max_temperaturec)
dsmin <- df %>%
select(tmstmp, min_temperaturec)
highchart() %>%
hc_chart(type = "line") %>%
hc_xAxis(
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")
) %>%
hc_yAxis(min = 0,
labels = list(format = "{value} C")) %>%
hc_add_series(dsmax,
type = "line",
hcaes(tmstmp, max_temperaturec),
name = "max") %>%
hc_add_series(dsmin,
type = "line",
hcaes(tmstmp, min_temperaturec),
name = "min")
# Some tooltips to make it a little *intercative*
x <- c("Min", "Mean", "Max")
y <- sprintf("{point.%s} ºC", c("min_temperaturec", "mean_temperaturec", "max_temperaturec"))
tltip <- tooltip_table(x, y)
hchart(
df,
type = "columnrange",
hcaes(x = date2, low = min_temperaturec, high = max_temperaturec, color = mean_temperaturec),
showInLegend = FALSE
) %>%
hc_chart(
polar = TRUE
) %>%
hc_xAxis(
gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")
) %>%
hc_yAxis(
max = 30,
min = -10,
labels = list(format = "{value} ºC"),
showFirstLabel = FALSE
) %>%
hc_tooltip(
useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip
)
path <- "/Volumes/2ND_HDD/Specialization/Johns Jopkins Data Science/5. Reproducible Research/Week 2/RepData_PeerAssessment1/"
setwd(path)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
count.fields(dataset$steps)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
count.fields(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset$steps)
summary(dataset$date)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset$date)
summary(dataset$interval)
summary(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
data.class(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
typeof(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
typeof(dataset$date)
dataset$date <- as.Date(as.character(dataset$date), format = "%Y-%m-%d")
head(dataset$date)
dataset$date <- as.Date(as.character(dataset$date), format = "%Y-%m-%d")
head(dataset)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
nas <- is.na(dataset$steps)
datasetwonas <- dataset[!nas]
nas <- is.na(dataset$steps)
datasetwonas <- dataset[!nas,]
head(datasetwonas)
subset?
?subset
#nas <- is.na(dataset$steps)
#datasetwonas <- dataset[!nas,]
#head(datasetwonas)
datasetwonas <- subset(dataset, is.na(steps))
head(datasetwonas)
dataset$date <- as.Date(as.character(dataset$date), format = "%Y-%m-%d")
head(dataset)
#nas <- is.na(dataset$steps)
#datasetwonas <- dataset[!nas,]
#head(datasetwonas)
datasetwonas <- subset(dataset, is.na(steps))
head(datasetwonas)
#nas <- is.na(dataset$steps)
#datasetwonas <- dataset[!nas,]
#head(datasetwonas)
datasetwonas <- complete.cases(dataset)
head(datasetwonas)
#nas <- is.na(dataset$steps)
#datasetwonas <- dataset[!nas,]
dataset[complete.cases(dataset),]
head(dataset)
#nas <- is.na(dataset$steps)
#datasetwonas <- dataset[!nas,]
dataset <- dataset[complete.cases(dataset),]
head(dataset)
datasetna <- dataset[complete.cases(dataset),]
head(datasetna)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
dataset$date <- as.Date(as.character(dataset$date), format = "%Y-%m-%d")
head(dataset)
datasetna <- dataset[complete.cases(dataset),]
head(datasetna)
aggdata <- aggregate(datasetna$steps, by = list(datasetna$date), sum)
head(aggdata, 10)
aggdata <- aggregate(datasetna$steps, by = list(datasetna$date), sum)
names(aggdata)[1] = "Date"
names(aggdata)[2] = "Total Steps"
head(aggdata, 10)
library(ggplot2)
hist1 <- ggplot(data = aggdata, aes(Total Steps)) + geom_histogram(fill="darkblue") + title("Total Daily Steps") + xlab("Total Steps") + ylab("Frequency")
library(ggplot2)
hist1 <- ggplot(data = aggdata, aes("Total Steps")) + geom_histogram(fill="darkblue") + title("Total Daily Steps") + xlab("Total Steps") + ylab("Frequency")
library(ggplot2)
hist1 <- ggplot(data = aggdata, aes("Total Steps")) + geom_histogram(fill="darkblue") + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(data = aggdata, aes("Total Steps")) + geom_histogram(fill="darkblue") + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
print(hist1)
library(ggplot2)
hist1 <- ggplot(data = aggdata, aes("Total Steps")) + geom_histogram(fill="darkblue") + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes("Total Steps")) + geom_histogram(fill="darkblue") + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes("Total Steps"))+ labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata)+ labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(`Total Steps`)) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "steelblue", binwidth=1000) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "steelblue", binwidth=2000) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "steelblue", binwidth=2000) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency") + gaussian()
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "steelblue", binwidth=2000) + labs(title = "Total Steps per day", xlab = "Steps", ylab= "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "steelblue", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Frequency")
hist1
mean(aggdata$`Total Steps`)
median(aggdata$`Total Steps`)
print(mean(aggdata$`Total Steps`))
median(aggdata$`Total Steps`)
print("the mean is" + mean(aggdata$`Total Steps`))
print(as.character("the mean is" + mean(aggdata$`Total Steps`)))
paste("the mean is ", mean(aggdata$`Total Steps`))
paste("the median is ", median(aggdata$`Total Steps`))
paste("the mean is ", mean(aggdata$`Total Steps`))
paste("the median is ", median(aggdata$`Total Steps`))
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "red", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "darkred", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Frequency")
hist1
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = `Total Steps`)) + geom_histogram(fill = "darkred", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist1
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), mean)
names(avrgsteps)[1] = "Steps"
names(avrgsteps)[2] = "Interval"
head(avrgsteps, 10)
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), mean)
names(avrgsteps)[1] = "Steps"
names(avrgsteps)[2] = "Interval"
tail(avrgsteps, 10)
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), mean)
names(avrgsteps)[1] = "Steps"
names(avrgsteps)[2] = "Interval"
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = Interval, y = Steps)) + labs(title = "Timeserie: Steps by Interval", x = "Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
timeserie <- ggplot(avrgsteps, aes(x = Steps, y = Interval)) + labs(title = "Timeserie: Steps by Interval", x = "Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
timeserie <- ggplot(avrgsteps, aes(x = Interval, y = Steps)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
timeserie <- ggplot(avrgsteps, aes(x = Steps, y = Interval)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), sum)
names(avrgsteps)[1] = "Steps"
names(avrgsteps)[2] = "Interval"
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = Steps, y = Interval)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), sum)
names(avrgsteps)[1] = "Interval"
names(avrgsteps)[2] = "Steps"
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = Steps, y = Interval)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
timeserie <- ggplot(avrgsteps, aes(x = Interval, y = Steps)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
avrgsteps <- aggregate(datasetna$steps, by = list(datasetna$interval), mean)
names(avrgsteps)[1] = "Interval"
names(avrgsteps)[2] = "Steps"
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = Interval, y = Steps)) + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg") + geom_line(color = "darkred")
timeserie
timeserie <- ggplot(avrgsteps, aes(x = Interval, y = Steps)) + geom_line(color = "darkred") + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg")
timeserie
aggdata <- aggregate(steps ~ date, data = datasetna, FUN = sum)
names(aggdata)[1] = "Date"
names(aggdata)[2] = "Total Steps"
head(aggdata, 10)
aggdata <- aggregate(steps ~ date, data = datasetna, FUN = sum)
#names(aggdata)[1] = "Date"
#names(aggdata)[2] = "Total Steps"
head(aggdata, 10)
aggdata <- aggregate(steps ~ date, data = datasetna, FUN = sum)
#names(aggdata)[1] = "Date"
#names(aggdata)[2] = "Total Steps"
head(aggdata, 10)
library(ggplot2)
hist1 <- ggplot(aggdata, aes(x = steps)) + geom_histogram(fill = "darkred", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist1
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
avrgsteps <- aggregate(steps ~ interval, data = datasetna, FUN = mean)
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = interval, y = steps)) + geom_line(color = "darkred") + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg")
timeserie
avrgsteps <- aggregate(steps ~ interval, data = datasetna, FUN = mean)
head(avrgsteps, 10)
timeserie <- ggplot(avrgsteps, aes(x = interval, y = steps)) + geom_line(color = "darkred") + labs(title = "Timeserie: Steps by Interval", x = "5-min Interval", y = "Steps Avrg")
timeserie
nas <- sum(is.na(dataset$steps))
nas <- sum(is.na(dataset$steps))
nas
paste("the mean is ", mean(aggdata$steps))
paste("the median is ", median(aggdata$steps))
nas <-  is.na(dataset$steps)
head(nas)
nas <-  is.na(dataset$steps)
stepmean <- mean(dataset[!nas,])
head(stepmean)
nas <-  is.na(dataset$steps)
stepmean <- dataset[!nas,]
head(stepmean)
nas <-  is.na(dataset$steps)
head(nas)
stepmean <- dataset[!nas,]
head(stepmean)
nas <-  is.na(dataset$steps)
stepmean <- dataset[!nas,]
head(stepmean)
meanvalue <- mean(datasetna)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue <- mean(datasetna$steps)
meanvalue
avrgsteps[which(avrgsteps$steps == max(avrgsteps$steps)),]
head(datasetnona)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
head(datasetnona)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
datasetnona$steps[is.na(datasetnona$steps)] <- meanvalue
head(datasetnona)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
datasetnona$steps[is.na(datasetnona$steps)] <- meanvalue
tail(datasetnona)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
datasetnona$steps[is.na(datasetnona$steps)] <- meanvalue
head(datasetnona)
summary(datasetnona)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
datasetnona$steps[is.na(datasetnona$steps)] <- meanvalue
head(datasetnona)
summary(datasetnona)
#unzip de file
unzip("activity.zip")
#saving dataset as "dataset"
dataset <- read.csv("activity.csv")
head(dataset)
summary(dataset)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
datasetnona$steps[is.na(datasetnona$steps)] <- meanvalue
head(datasetnona)
summary(datasetnona)
datasetnona
min(datasetnona)
max(datasetnona$steps)
min(datasetnona$steps)
mean(datasetnona$steps)
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
nas <- is.na(dataset$steps)
datasetnona$steps[nas] <- meanvalue
#calculating the mean value
meanvalue <- mean(datasetna$steps)
meanvalue
#replacing NAs with the mean in the "steps" column
datasetnona <- dataset
nas <- is.na(dataset$steps)
datasetnona$steps[nas] <- meanvalue
summary(datasetnona)
aggdata2 <- aggregate(steps ~ date, data = datasetnona, FUN = sum)
hist2 <- ggplot(aggdata2, aes(x = steps)) + geom_histogram(fill = "darkred", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist2
aggdata2 <- aggregate(steps ~ date, data = datasetnona, FUN = sum)
hist2 <- ggplot(aggdata2, aes(x = steps)) + geom_histogram(fill = "darkblue", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist2
aggdata2 <- aggregate(steps ~ date, data = datasetnona, FUN = sum)
hist2 <- ggplot(aggdata2, aes(x = steps)) + geom_histogram(fill = "darkblue", binwidth=1000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist2
aggdata2 <- aggregate(steps ~ date, data = datasetnona, FUN = sum)
hist2 <- ggplot(aggdata2, aes(x = steps)) + geom_histogram(fill = "darkblue", binwidth=2000) + labs(title = "Total Steps per day", x = "Steps", y = "Count")
hist2
paste("the mean is ", mean(aggdata2$steps))
paste("the median is ", median(aggdata2$steps))
